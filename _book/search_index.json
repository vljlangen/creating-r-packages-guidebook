[["writing-basic-functions.html", "3 Writing Basic Functions 3.1 Example function 1 3.2 Example function 2 3.3 Saving Your Code", " 3 Writing Basic Functions In this chapter, we’ll start by writing a couple of simple functions. These functions will be used later on in the R package we are creating. Below is a screenshot of writing these functions in RStudio. Further down on this page, you will find the code in a text format, which you can copy and paste into your editor. 3.1 Example function 1 The say_hello_to() function takes one argument, a name, and prints a greeting message. say_hello_to &lt;- function(name) { message &lt;- paste0(&quot;Hello, &quot;, name, &quot;!&quot;) print(message) } # Example usage say_hello_to(&quot;John&quot;) ## [1] &quot;Hello, John!&quot; 3.2 Example function 2 The throw_dice() function simulates rolling a six-sided die. It generates a random number between 1 and 6 and prints the result. throw_dice &lt;- function() { roll &lt;- sample(1:6, 1) message &lt;- paste0(&quot;You rolled a &quot;, roll, &quot;.&quot;) print(message) } # Example usage throw_dice() ## [1] &quot;You rolled a 6.&quot; 3.3 Saving Your Code After writing these functions and testing them in an R environment like RStudio, make sure to save or copy-paste them somewhere. This way, you can introduce them to your R package once we progress further in this tutorial. In this example, I copied the functions to Visual Studio Code (as shown in the screenshot below), but you can use any text editor, such as TextEdit on MacOS or Notepad on Windows, or simply save the code somewhere on your computer. Creating R Packages: A Step-by-Step Guide by Ville Langén is licensed under CC BY-SA 4.0 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
